name: Update cidr
on: 
  push:
  #  branches: [master]
  schedule:
    - cron: '0 0 * * *'
jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: |
          cd ${{ github.workspace }}
      - run: git config --global user.email "you@example.com"
      - run: git config --global user.name "GitHub Actions"
      - name: Create config
      - run: |
          echo "# Build Of GitHub Actions" > shadowrocket-rule.conf
          echo "# Date - "`date` >> shadowrocket-rule.conf
          echo "[Rule]" >> shadowrocket-rule.conf
      - name: ad
      - run: |
          echo "# Build Ad-rule"
          curl https://johnshall.github.io/Shadowrocket-ADBlock-Rules-Forever/sr_ad_only.conf | grep "Reject" >> shadowrocket-rule.conf
      - name: Telegram
        run: |
          echo "# 电报" >> shadowrocket-rule.conf
          echo "DOMAIN-SUFFIX,t.me,🔐加密节点" >> shadowrocket-rule.conf
          echo "DOMAIN-SUFFIX,telegram.org,🔐加密节点" >> shadowrocket-rule.conf
          curl https://core.telegram.org/resources/cidr.txt | awk '{print "IP-CIDR,"$0",🔐加密节点,no-resolve"}' >> shadowrocket-rule.conf
      - run: git add *
      - run: git commit -m update
      - run: git push

      # - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v3
      # - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      # - run: echo "🍏 This job's status is ${{ job.status }}."
